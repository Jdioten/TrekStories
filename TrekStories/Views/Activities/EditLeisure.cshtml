@model TrekStories.Models.LeisureActivity

@{
    Layout = "~/Views/Shared/_LayoutWithDatePicker.cshtml";
    ViewBag.Title = "Edit/Create Leisure Activity";
}

<style>
    body {
        background-image: url(../../Images/active-activity-beach.jpg);
    }
</style>
<div id="form-container">
    <h3>Leisure Activity on Step @ViewBag.From to @ViewBag.To</h3>
    <hr />

    @using (Html.BeginForm("EditLeisure", "Activities"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.StepId, new { id = "stepid", Value = ViewBag.StepId })

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LeisureCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.LeisureCategory, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LeisureCategory, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control time-picker" } })
                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group" style="max-width:450px;">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        <span class="input-group-addon">@ViewBag.Currency</span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-trekstories" />
                    &emsp;
                    @Html.ActionLink("Cancel", "Details", "Step", new { id = ViewBag.StepId}, new { @class= "btn btn-default" })
                </div>
            </div>
        </div>
    }
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
