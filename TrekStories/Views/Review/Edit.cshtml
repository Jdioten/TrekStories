@model TrekStories.Models.Review

@{
    ViewBag.Title = "Edit Review";
    string hidden = ViewBag.Create ? "hidden" : "";
}

<style>
    body {
        background-image: url(../../Images/antique-blank-camera-269923.jpg);
    }
    input, select, textarea {
        max-width: 100%;
    }
</style>

<div id="form-container">
    @if (TempData["message"] != null)
    {
        <div class="alert alert-dismissible alert-warning">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            @TempData["message"]
        </div>
    }
    <h3>Review Step @ViewBag.From to @ViewBag.To</h3>
    <blockquote class="hidden-xs" style="border-left:none; padding-top:4px; padding-bottom:2px;">
        <p class="site-colour" style="font-size:0.8em;">
            Traveling - it leaves you speechless, then turns you into a story teller.
            <small class="blockquote-footer" style="display:inline">Ibn Battuta</small>
        </p>
    </blockquote>
    <hr />
    @using (Html.BeginForm("Edit","Review"))
    {
        @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ReviewId)
            @Html.HiddenFor(model => model.StepId, new { id = "stepid", Value = ViewBag.StepId })

            <div class="form-group">
                @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label" })
                <input type="hidden" name="Rating" id="Rating" value="@ViewBag.Rating" />
                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                    <div onmouseout="CRateSelected()">
                        <span class="far fa-star" id="Rate1" onclick="CRate(1)" onmouseover="CRateOver(1)" onmouseout="CRateOut(1)"></span>
                        <span class="far fa-star" id="Rate2" onclick="CRate(2)" onmouseover="CRateOver(2)" onmouseout="CRateOut(2)"></span>
                        <span class="far fa-star" id="Rate3" onclick="CRate(3)" onmouseover="CRateOver(3)" onmouseout="CRateOut(3)"></span>
                        <span class="far fa-star" id="Rate4" onclick="CRate(4)" onmouseover="CRateOver(4)" onmouseout="CRateOut(4)"></span>
                        <span class="far fa-star" id="Rate5" onclick="CRate(5)" onmouseover="CRateOver(5)" onmouseout="CRateOut(5)"></span>
                    </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PublicNotes, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PublicNotes, new { htmlAttributes = new { @class = "form-control", rows = 3, placeholder = "How was that day? Share the details of your experience with other users." } })
                @Html.ValidationMessageFor(model => model.PublicNotes, "", new { @class = "text-danger" })
                <small id="publicHelp" class="form-text text-muted">Your public step review will be visible to other users to help them organise their own trips.</small>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PrivateNotes, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PrivateNotes, new { htmlAttributes = new { @class = "form-control", rows = 3, placeholder = "Enter a personal summary of the day that can be printed on the souvenir report." } })
                @Html.ValidationMessageFor(model => model.PrivateNotes, "", new { @class = "text-danger" })
                <small id="privateHelp" class="form-text text-muted">Private notes will not be shared with other users.</small>
            </div>
            

            <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-trekstories" />
                    &emsp;
                    @Html.ActionLink("Cancel", "Details", "Step", new { id = ViewBag.StepId }, new { @class = "btn btn-default" })
            </div>
    }
    <div class="@hidden">
        <br />
        <div class="row">
            @using (Html.BeginForm("UploadImageAsync", "Review", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="panel panel-trekstories">
                    <div class="panel-heading">
                        <h3 class="panel-title">Add a Photo to this Step</h3>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-4 col-md-offset-4">
                                <input type="file" name="file" />
                                <input type="hidden" name="revId" value="@Model.ReviewId" />
                                <br />
                                <input type="submit" class="btn btn-trekstories form-control" value="Save Photo" />
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <br />
        <div class="row">
            <div class="col-lg-12">
                <div class="alert alert-warning">You have @ViewBag.PhotoCount Photo(s)</div>
            </div>
            @if (@ViewBag.PhotoCount > 0)
            {
                foreach (var item in Model.Images)
                {
                    <div class="col-md-4 col-sm-6 col-xs-12 thumb">
                        <a class="thumbnail rev-img-thumb" href="@item.Url" target="_blank">
                            <img class="img-responsive" src="@item.Url" style="height: 300px;width:100%;" alt="">
                        </a>
                        @using (Html.BeginForm("DeleteImageAsync", "Review", FormMethod.Post, new { @class = "btn btn-default btn-block no-padding" }))
                    {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("ImgId", item.Id)
                            <button type="submit" class="btn btn-danger" style="width:100%;margin:0px;">
                                <span class="glyphicon glyphicon-remove"></span>
                            </button>
                        }
                    </div>
                }
            }
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        CRateSelected()
    });
    //code copied from http://www.dotnetfunda.com/articles/show/3438/star-rating-system-in-aspnet-mvc

    function CRate(r) {
        $("#Rating").val(r);
        for (var i = 1; i <= r; i++) {
            $("#Rate" + i).attr('class', 'fas fa-star');
        }
        // unselect remaining
        for (var i = r + 1; i <= 5; i++) {
            $("#Rate" + i).attr('class', 'far fa-star');
        }
    }

    function CRateOver(r) {
        for (var i = 1; i <= r; i++) {
            $("#Rate" + i).attr('class', 'fas fa-star');
        }
    }

    function CRateOut(r) {
        for (var i = 1; i <= r; i++) {
            $("#Rate" + i).attr('class', 'far fa-star');
        }
    }

    function CRateSelected() {
        var setRating = $("#Rating").val();
        for (var i = 1; i <= setRating; i++) {
            $("#Rate" + i).attr('class', 'fas fa-star');
        }
    }
</script>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
