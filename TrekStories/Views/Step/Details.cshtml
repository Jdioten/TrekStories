@using TrekStories.Models
@model TrekStories.Models.Step


@{
    ViewBag.Title = "Details";
    DateTime cOut = Model.Date.AddDays(1);
    string selectClass;
}

<div class="mycontainer">
    @if (TempData["message"] != null)
    {
        <div class="alert alert-dismissible alert-warning">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            @TempData["message"]
        </div>
    }
    <div class="text-right" style="margin-bottom:0;">
        <ul class="pagination pagination-sm">
            @for (int i = 1; i <= ViewBag.Steps.Length; i++)
            {
                selectClass = ViewBag.Steps[i-1] == Model.StepId ? "active" : "";
                <li class="@selectClass"><a href="@Url.Action("Details", new { id = ViewBag.Steps[i-1]})">@i</a></li>
            }
        </ul>
    </div>
    <h4 style="margin-top:0;">@Model.Trip.Title - Day @Model.SequenceNo <small>(@Model.Date.ToShortDateString())</small></h4>
    <hr class="thick-hr"/>
    <section>
        <div class="row">
            <div class="col-md-2">
                <strong><em>Walk Details</em></strong>
            </div>
            <div class="col-md-4">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.From)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.From)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.To)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.To)
                    </dd>

                    <dt>
                        Distance
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.WalkingDistance) Km
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Ascent)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Ascent) m
                    </dd>

                    <dt>
                        Time
                    </dt>
                    <dd>
                        @Model.GetWalkingTime()
                    </dd>
                </dl>
            </div>
            <div class="col-md-6">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Description)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Description)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Notes)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Notes)
                    </dd>
                </dl>
            </div>
        </div>
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.StepId }) |
            @Html.ActionLink("Back to Trip", "Details", "Trip", new { id = Model.TripId}, null)
        </p>
    </section>
    <hr class="thick-hr"/>
    <section>
        <div class="row">
            <div class="col-md-2">
                <strong><em>Accommodation</em></strong>
            </div>
            @if (Model.Accommodation != null)
            {
            <div class="col-md-4">
                <address class="text-center">
                    @Html.DisplayFor(model => model.Accommodation.Name) <br/>
                    @Html.DisplayFor(model => model.Accommodation.Street) <br/> 
                    @Html.DisplayFor(model => model.Accommodation.City)<br />
                    @Html.DisplayFor(model => model.Accommodation.PhoneNumber)<br />
                </address>
            </div>
            <div class="col-md-6">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Accommodation.CheckIn)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Accommodation.CheckIn)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Accommodation.CheckOut)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Accommodation.CheckOut)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Accommodation.Price)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Accommodation.Price)
                    </dd>

                    <dt>
                        Confirmation
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Accommodation.ConfirmationFileUrl)
                    </dd>
                </dl>
            </div>
            }
        </div>
        <p>
            @if (Model.Accommodation == null)
            {
                @Html.ActionLink("Add", "Create", "Accommodation", new { id = Model.TripId, cIn = Model.Date, cOut = cOut }, null)
            }
            else
            {
                @Html.ActionLink("Edit", "Edit", "Accommodation", new { id = Model.Accommodation.AccommodationId }, null)
                <span> | </span>
                @Html.ActionLink("Delete", "Delete", "Accommodation", new { id = Model.Accommodation.AccommodationId }, null)
            }
        </p>
    </section>
    <hr class="thick-hr" />
    <section>
        <strong><em>Activities</em></strong>
        <div class="pull-right" id="activity-menu">
            <div class="btn-group btn-group-sm" role="group">
                <a class="btn btn-trekstories" href="@Url.Action("CreateTransport", "Activities", new { stepId = Model.StepId})">Add Transport</a>
                <a class="btn btn-trekstories" href="@Url.Action("CreateLeisure", "Activities", new { stepId = Model.StepId})">Add Leisure Activity</a>
            </div>
            @*<a class="rotating-button btn btn-success"><span class="glyphicon glyphicon-plus"></span></a>*@
        </div>
        @Html.Partial("_ActivityThread", (List<ActivityThreadViewModel>)ViewBag.ActivityThread)
    </section>
    <hr class="thick-hr" />
    <section>
         <strong><em>Review</em></strong>
            @if (Model.Review != null)
            {
                <p>Add Review Details here...</p>
            }
        <p>
            @if (Model.Review == null)
            {
                @Html.ActionLink("Add", "Create", "Review", new { id = Model.StepId }, null)
            }
            else
            {
                @Html.ActionLink("Edit", "Edit", "Review", new { id = Model.StepId }, null)
                <span> | </span>
                @Html.ActionLink("Delete", "Delete", "Review", new { id = Model.StepId }, null)
            }
        </p>
    </section>
</div>